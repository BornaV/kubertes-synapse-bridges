---
apiVersion: v1
data:
  config.json: |
    {
      "default_server_config": {
      "m.homeserver": {
         "base_url": "https://matrix.example.com"
      },
      "m.identity_server": {
         "base_url": "https://vector.im"
      }
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: element
  name: element-config
  namespace: matrix
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: element
  name: element
  namespace: matrix
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: element
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: element
  name: element
  namespace: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: element
  template:
    metadata:
      labels:
        app: element
    spec:
      containers:
      - image: vectorim/element-web:v1.11.24
        imagePullPolicy: IfNotPresent
        name: element-web
        readinessProbe:
          tcpSocket:
            port: 80
        volumeMounts:
        - mountPath: /app/config.json
          name: element-config
          subPath: config.json
      restartPolicy: Always
      volumes:
      - configMap:
          name: element-config
        name: element-config
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: element
  namespace: matrix
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`element.example.com`)
      kind: Rule
      services:
        - name: element
          port: 80
          namespace: matrix
      #middlewares:
      #  - name: default-headers
      #    namespace: default
  tls:
    secretName: matrix.example.com